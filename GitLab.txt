Git Lab
=================
This is a remote version control system like github and 
it can also perform CI-CD

Git lab contains gitlab server and Runner
Git lab server initiates the CI-CD pipeline and passes
it to a Runner which executes the Job,This Runner
can be Linux or Windows server of it can be a docker container

1 Create a customised docker  ubuntu image with all required s/w's for ci-cd
  docker run  --name u1 -it ubuntu
  apt-get update
  apt-get install -y git maven openjdk-8-jdk

2 Generate the ssh keys and copy to QA and ProdServer
  ssh-keygen
  ssh-copy-id ubuntu@public_ip_ofQAServer
  ssh-copy-id ubuntu@public_ip_ofProdServer
  
  Note: QA and ProdsErvers are 2 AWS instances with tomcat9 configured

3 Save this customised container as image
  docker commit u1 intelliqit/ubuntu_gitlab

4 Login into docker registry and push this image
  docker login
  docker push intelliqit/ubuntu_gitlab

=====================================================================
---
image: intelliqit/ubuntu_gitlab

stages:
 - download_build
 - deploy
 - test
 - delivery
continuous downlaod and build:
 stage: download_build
 script: git clone https://gitlab.com/intelliq/maven.git
 script: mvn package
 artifacts:
  paths: 
   - /builds/intelliq/maven/webapp/target/webapp.war

continuous deployment:
 stage: deploy
 script: scp /builds/intelliq/maven/webapp/target/webapp.war ubuntu@3.101.149.232:/var/lib/tomcat9/webapps/testwebapp.war

continuous testing:
 stage: test
 script: git clone https://gitlab.com/intelliq/FunctionalTesting.git
 script: java -jar /FunctionalTesting1/testing.jar

continuous delivery:
 stage: delivery
 script: scp /builds/intelliq/maven/webapp/target/webapp.war ubuntu@54.176.61.145:/var/lib/tomcat9/webapps/prodwebapp.war


=====================================================================
Continuous Build:
  stage: build
  tags:
    - Common Runner
  script:
    - git clone "https://github.com/venkatbanda9/MyJavaApp.git"
    - cd MyJavaApp;mvn package
    - cp /home/gitlab-runner/YonzQhzB/0/venkatbanda9/my-first-project/MyJavaApp/webapp/target/webapp.war /home/gitlab-runner/
Continuous Test:
  stage: test
  tags:
    - Common Runner
  script:
    - scp /home/gitlab-runner/webapp.war  ubuntu@172.31.34.244:/var/lib/tomcat9/webapps/test.war
    - git clone "https://github.com/intelliqittrainings/FunctionalTesting.git"
    - java -jar /home/gitlab-runner/YonzQhzB/0/venkatbanda9/my-first-project/FunctionalTesting/testing.jar
Continuous Deploy:
  stage: deploy
  tags:
    - Common Runner
  script:
    - scp /home/gitlab-runner/webapp.war  ubuntu@172.31.44.28:/var/lib/tomcat9/webapps/prodapp.war

==========================================================================



  






